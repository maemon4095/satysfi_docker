name: build
on:
  workflow_call:
    inputs:
      targets:
        type: string
        required: true

jobs:
  format:
    runs-on: ubuntu-latest
    outputs:
      targets: ${{ steps.join.outputs.TARGETS }}
    steps:
      - id: join
        run: |
          TARGETS=$(echo "${{ inputs.targets }}" | awk -v ORS="" 'BEGIN { print "[" } NR==1 { print "\"$0\"" } NR>1 { print "," "\"$0\"" } END { print "]" }')
          echo "TARGETS=${TARGETS}" >> "$GITHUB_OUTPUT"

  build:
    runs-on: ubuntu-latest
    needs: format
    if: ${{ needs.format.outputs.targets != '[]' }} 
    strategy:
      matrix: 
        target: ${{ fromJson(needs.format.outputs.targets) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CONTAINER_REGISTRY_TOKEN }}
      
      - name: Build and push
        run: |
          DIR=$(dirname "${{ matrix.target }}")
          FILENAME=(basename "${{ matrix.target }}")
          IMAGE_NAME="satysfi-$(realpath --relative-to="images" | sed "s|/|-|")"
          TAG=$((echo "$FILENAME" | grep --color=never -o -e "\..*$") || echo "latest")
          FULLNAME="ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME:$TAG"
          
          echo "build ${{ matrix.target }} as $IMAGE_NAME:$TAG"

          docker build -f "${{ matrix.target }}" -t "$FULLNAME" "$DIR"
          docker push "$FULLNAME"