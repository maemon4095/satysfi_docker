name: build
on:
  workflow_dispatch:
    inputs:
      mode:
        description: running mode
        required: true
        default: "all"
        type: choice
        options:
          - all
          - diff
  push:
    branches:
      - 'main'
    paths:
      - 'images/**/Dockerfile*'

jobs:
  entry:
    runs-on: ubuntu-latest
    outputs:
      mode: ${{ steps.coalesce.outputs.MODE }}
    steps:
      - id: coalesce
        run: |
          MODE="${{ inputs.mode || 'diff' }}"
          echo "MODE=${MODE}" >> "$GITHUB_OUTPUT"

  all:
    needs: entry
    if: ${{ needs.entry.outputs.mode == 'all' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Collect all Dockerfiles
        run: |
          FILES=$(find ./images -wholename **/Dockerfile*)
          echo "TARGETS=${FILES}" >> "$GITHUB_ENV"

  diff:
    needs: entry
    if: ${{ needs.entry.outputs.mode == 'diff' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Collect changed Dockerfiles
        run: |
          git fetch origin ${{ github.ref_name }} --depth=1
          DIFF=$(git diff --name-only origin/${{ github.ref_name }} HEAD | grep --color=never Dockerfile || echo "")
          echo "=====diffs====="
          echo "${DIFF}"
          echo "==============="
          TARGETS=$(echo "${DIFF}" | awk -v ORS="" 'BEGIN { print "[" } NR==1 { print $0 } NR >1 { print "," $0 } END { print "]" }')
          echo "TARGETS=${TARGETS}" >> "$GITHUB_ENV"

  build:
    needs: [diff, entry]
    runs-on: ubuntu-latest
    if: ${{ github.env.TARGETS != '[]' }}
    strategy:
      matrix: 
        target: ${{ fromJson(github.env.TARGETS) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CONTAINER_REGISTRY_TOKEN }}
      
      - name: Build and push
        run: |
          DIR=$(dirname "${{ matrix.target }}")
          FILENAME=(basename "${{ matrix.target }}")
          IMAGE_NAME="satysfi-$(realpath --relative-to="images" | sed "s|/|-|")"
          TAG=$((echo "$FILENAME" | grep --color=never -o -e "\..*$") || echo "latest")
          FULLNAME="ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME:$TAG"
          
          echo "build ${{ matrix.target }} as $IMAGE_NAME:$TAG"

          docker build -f "${{ matrix.target }}" -t "$FULLNAME" "$DIR"
          docker push "$FULLNAME"